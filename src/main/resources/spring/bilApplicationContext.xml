<?xml version="1.0" encoding="UTF-8"?>
<!--
SPDX-FileCopyrightText: Copyright 2020 | CSI Piemonte
SPDX-License-Identifier: EUPL-1.2
-->

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:util="http://www.springframework.org/schema/util"
	xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	    http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	    http://www.springframework.org/schema/context
	    http://www.springframework.org/schema/context/spring-context-3.0.xsd
	    http://www.springframework.org/schema/util
	    http://www.springframework.org/schema/util/spring-util.xsd
	    http://www.springframework.org/schema/task
	    http://www.springframework.org/schema/task/spring-task-3.0.xsd"
	    >

	<!-- Aggancia al contesto di Spring le properties che si trovano nei file 
		di properties della cartella spring sotto il classpath. I valori potranno 
		essere referenziati sia nei file di configurazione che da codice tramite 
		l'annotation @Value, con la sintassi ${property.name} <context:property-placeholder 
		location="classpath:spring/*.properties"/> -->

	<!-- Abilita la validazione JSR-303 <bean id="validator" class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean"/> 
		<bean class="org.springframework.validation.beanvalidation.MethodValidationPostProcessor"/> -->


	<context:property-placeholder location="classpath:spring/bilApplication.properties" />
	
	<context:component-scan base-package="it.csi.siac.siacbilser, it.csi.siac.siaccorser, it.csi.siac.siacintegser, it.csi.siac.custom" />

	<context:annotation-config />
	
	
	
	<task:annotation-driven executor="asyncServiceExecutor" scheduler="asyncServiceScheduler"/>
	<task:executor id="asyncServiceExecutor" pool-size="${asyncExecutor.poolSize}" /><!-- queue-capacity default Integer.MAX_VALUE -->
	<task:scheduler id="asyncServiceScheduler" pool-size="1"/>
	
	<task:executor id="singleThreadExecutor" pool-size="1"  /> <!-- queue-capacity default Integer.MAX_VALUE utilizza il ThreadPoolTaskExecutor non ha lo startTimeout! -->
	<task:executor id="longExecutionTimeExecutor" pool-size="${longExecutionTimeExecutor.poolSize}" /> 
	
<!-- 	<bean id="singleThreadExecutor" class="org.springframework.jca.work.jboss.JBossWorkManagerTaskExecutor"> -->
<!--  		<property name="workManagerName" value="singleThreadWorkManager"/> -->
<!--         <property name="resourceRef" value="true"/> -->
<!-- 	</bean> -->


	<!-- Utilizzo l'indice dell'argomento nel costruttore per evitare che sia NECESSARIO mantenere i 'debug symbols' nei .class in produzione -->
	<bean id="attiliqStartServletInvoker" name="attiliqStartServletInvoker" class="it.csi.siac.siacbilser.business.service.allegatoatto.AttiliqStartServletInvoker" scope="singleton">
		<constructor-arg index="0" value="${attiliqStartServlet.host}"/>
		<constructor-arg index="1" value="${attiliqStartServlet.port}"/>
		<constructor-arg index="2" value="${attiliqStartServlet.serviceUri}"/>
		<constructor-arg index="3" value="${attiliqStartServlet.tokenRenewalUri}"/>
		<constructor-arg index="4" value="${attiliqStartServlet.consumerKey}"/>
		<constructor-arg index="5" value="${attiliqStartServlet.consumerSecret}"/>
   </bean>
   

<!-- XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX -->
<!-- 	<bean id="jbossResourceAdapter" class="org.jboss.resource.adapter.jms.JmsResourceAdapter"/> -->
<!-- 	<bean id="jbossResourceAdapter" class="org.jboss.jca.core.workmanager.rars.dwm.WorkResourceAdapter" /> -->

<!-- see https://developer.jboss.org/message/784022#784022  -->
	
<!-- 	<bean id="mbeanServer" class="org.jboss.mx.util.MBeanServerLocator" factory-method="locateJBoss"/> -->
	
<!-- 	<bean id="singleThreadWorkManager" factory-bean="mbeanServer" factory-method="getAttribute"> -->
<!-- 	    <constructor-arg> -->
<!-- 	        <bean class="org.springframework.jmx.support.ObjectNameManager" factory-method="getInstance"> -->
<!-- 	            <constructor-arg value="jboss.jca:service=singleThreadWorkManager" /> -->
<!-- 	        </bean> -->
<!-- 	    </constructor-arg> -->
<!-- 	    <constructor-arg value="Instance" /> -->
<!-- 	</bean> -->
	
<!-- 	<bean id="singleThreadExecutor" class="org.springframework.jca.work.WorkManagerTaskExecutor"> -->
<!-- 	    <property name="workManager" ref="singleThreadWorkManager"/> -->
<!-- 	</bean> -->
	
<!-- 	<bean id="jbossResourceAdapterFactory" class="org.springframework.jca.support.ResourceAdapterFactoryBean"> -->
<!-- 	    <property name="resourceAdapter" ref="jbossResourceAdapter"/> -->
<!-- 	    <property name="workManager" ref="taskExecutor"/> -->
<!-- 	</bean> -->
	
<!-- 	<bean id="jbossActivationSpecFactory" class="org.springframework.jms.listener.endpoint.StandardJmsActivationSpecFactory"> -->
<!-- 	    <property name="activationSpecClass" value="org.jboss.resource.adapter.jms.inflow.JmsActivationSpec"/> -->
<!-- 	    <property name="defaultProperties"> -->
<!-- 	        <props> -->
<!-- 	            <prop key="sessionTransacted">false</prop> -->
<!-- 	            <prop key="minSession">1</prop> -->
<!-- 	            <prop key="maxSession">15</prop> -->
<!-- 	        </props> -->
<!-- 	    </property> -->
<!-- 	</bean> -->


<!-- XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX -->
	
	<util:properties id="azioniRichiesteProperties" location="classpath:CheckedAccountBaseService.properties" scope="singleton" />
	
	

</beans>